{"version":3,"file":"index.js","sources":["../src/domain.ts","../src/effects.ts","../src/events.ts","../src/matrix-client.ts","../src/mappers.ts","../src/init.ts"],"sourcesContent":["import { createDomain } from \"effector\"\n\nexport const matrixDomain = createDomain(\"matrix\")\n","import { SearchResponse } from \"matrix-js-sdk\"\nimport { matrixDomain } from \"./domain\"\nimport {\n    DeleteMessagePayload,\n    DeleteMessageResult,\n    EditMessagePayload,\n    LoginByPasswordParams,\n    LoginPayload,\n    Room,\n    SearchMessageTextPayload,\n    SendMessagePayload,\n    StartClientParams,\n    Message,\n    LoginByTokenParams,\n    InitTimelineWindowParams,\n    TimelineWindowPaginationParams,\n    SearchPayload,\n    LoadTimelineWindowParams,\n} from \"./types\"\n\nexport const loginByPasswordFx = matrixDomain\n    .effect<LoginByPasswordParams, LoginPayload, Error>()\nexport const loginByTokenFx = matrixDomain\n    .effect<LoginByTokenParams, LoginPayload, Error>()\nexport const initStoreFx = matrixDomain.effect<void, void, Error>()\nexport const startClientFx = matrixDomain\n    .effect<StartClientParams, void, Error>()\nexport const stopClientFx = matrixDomain.effect<void, void, Error>()\nexport const searchFx = matrixDomain.effect<SearchPayload, Message[], Error>()\nexport const searchMessageTextFx = matrixDomain\n    .effect<SearchMessageTextPayload, SearchResponse, Error>()\nexport const sendMessageFx = matrixDomain\n    .effect<SendMessagePayload, void, Error>()\nexport const editMessageFx = matrixDomain\n    .effect<EditMessagePayload, void, Error>()\nexport const deleteMessageFx = matrixDomain\n    .effect<DeleteMessagePayload, DeleteMessageResult, Error>()\nexport const getRoomTimelineFx = matrixDomain\n    .effect<Room[\"roomId\"], Message[], Error>()\nexport const initTimelineWindowFx = matrixDomain\n    .effect<InitTimelineWindowParams, Message[], Error>()\nexport const getTimelineWindowMessagesFx = matrixDomain\n    .effect<void, Message[], Error>()\nexport const loadTimelineWindowFx = matrixDomain\n    .effect<LoadTimelineWindowParams, Message[], Error>()\nexport const paginateTimelineWindowFx = matrixDomain\n    .effect<TimelineWindowPaginationParams, Message[], Error>()\n","import { batchEvents } from \"@42px/effector-extra\"\nimport { matrixDomain } from \"./domain\"\nimport { MappedRoom, MessageEvent } from \"./types\"\n\nexport const roomMessage = matrixDomain.event<MessageEvent>()\nexport const roomMessageBatch = batchEvents(roomMessage, 500)\nexport const onInitialSync = matrixDomain.event<MappedRoom[]>()\nexport const onCachedState = matrixDomain.event<MappedRoom[]>()\n","import matrix, { CreateClientOption, MatrixClient } from \"matrix-js-sdk\"\nimport { EventListener } from \"./types\"\n\nlet clientStore: MatrixClient\nlet options: Parameters<typeof matrix.createClient>[0]\nconst callbacksStore: EventListener[] = []\nexport const client = (): MatrixClient => {\n    if (!clientStore) {\n        clientStore = matrix.createClient(options)\n        callbacksStore.forEach(([eventName, cb]) => {\n            clientStore.on(eventName, cb)\n        })\n    }\n    return clientStore\n}\nexport const prependClientParams = (\n    opts: string | CreateClientOption\n): void => {\n    options = opts\n}\n\nexport const onClientEvent = (callbacks: EventListener[]): void => {\n    callbacksStore.push(...callbacks)\n}\n","import { MatrixEvent } from \"matrix-js-sdk\"\nimport {\n    Message,\n    MessageEvent,\n    Room,\n    MappedRoom,\n} from \"./types\"\n\nexport function toMessageEvent(event: MatrixEvent): MessageEvent {\n    const payload: MessageEvent = {\n        eventId: event.getId(),\n        // если есть клиентская агрегация, то этот метод отдает последний контент\n        content: event.getContent(),\n        originServerTs: event.getDate(),\n        roomId: event.getRoomId(),\n        sender: event.sender,\n        type: event.getType(),\n        redaction: event.isRedaction(),\n        redacted: event.isRedacted(),\n        editing: Boolean(event.isRelation()),\n    }\n    if (event.hasAssocation()) {\n        payload.relatedEventId = event.getAssociatedId()\n    }\n    return payload\n}\n\nexport function toMessage(\n    event: MatrixEvent,\n    originalEventId?: MatrixEvent[\"event\"][\"event_id\"]\n): Message {\n    return {\n        originalEventId: originalEventId !== undefined ?\n            originalEventId :\n            event.getId(),\n        content: event.getContent(),\n        sender: event.sender,\n        originServerTs: event.getDate(),\n        edited: Boolean(event.replacingEventId()),\n        redacted: event.isRedacted(),\n    }\n}\n\nexport function toMappedRoom(room: Room): MappedRoom {\n    return {\n        roomId: room.roomId,\n        name: room.name,\n        summary: room.summary,\n    }\n}\n\nexport function mergeMessageEvents(\n    acc: Message[],\n    event: MatrixEvent\n): Message[] {\n    if (event.isRelation(\"m.replace\") || event.isRedaction()) {\n        return acc\n    }\n    acc.push(toMessage(event))\n    return acc\n}\n","import { createCustomError } from \"@42px/custom-errors\"\nimport { forward } from \"effector\"\nimport matrix from \"matrix-js-sdk\"\nimport {\n    initStoreFx,\n    loginByPasswordFx,\n    deleteMessageFx,\n    searchMessageTextFx,\n    sendMessageFx,\n    startClientFx,\n    editMessageFx,\n    getRoomTimelineFx,\n    loginByTokenFx,\n    stopClientFx,\n    initTimelineWindowFx,\n    getTimelineWindowMessagesFx,\n    paginateTimelineWindowFx,\n    searchFx,\n    loadTimelineWindowFx,\n} from \"./effects\"\nimport { onCachedState, onInitialSync, roomMessage } from \"./events\"\nimport {\n    mergeMessageEvents,\n    toMappedRoom,\n    toMessage,\n    toMessageEvent,\n} from \"./mappers\"\nimport { client, onClientEvent } from \"./matrix-client\"\nimport {\n    DeleteMessageResult,\n    Room,\n    MatrixEvent,\n} from \"./types\"\n\nconst RoomNotFound = createCustomError(\"RoomNotFound\")\nconst TimelineWindowUndefined = createCustomError(\"TimelineWindowUndefined\")\nconst PaginationFail = createCustomError(\"PaginationFail\")\n\nconst ROOM_MESSAGE_EVENT = \"m.room.message\"\nconst ROOM_REDACTION_EVENT = \"m.room.redaction\"\nconst LOGIN_BY_PASSWORD = \"m.login.password\"\nconst LOGIN_BY_TOKEN = \"m.login.token\"\n\nforward({\n    from: loginByPasswordFx.done.map(() => ({ initialSyncLimit: 20 })),\n    to: startClientFx,\n})\nloginByPasswordFx.use((params) => client().login(LOGIN_BY_PASSWORD, params))\nloginByTokenFx.use((params) => client().login(LOGIN_BY_TOKEN, params))\ninitStoreFx.use(async () => {\n    const { store } = client()\n    if (store) return store.startup()\n})\nstartClientFx.use((params) => client().startClient(params))\nsearchFx.use(async (params) => {\n    const searchResponse = await client().search(params)\n    return searchResponse\n        .search_categories\n        .room_events.results.map(({ result }) => {\n            const event = new MatrixEvent(result)\n            return toMessage(event)\n        })\n})\n// TODO а нужен ли?\nsearchMessageTextFx.use((params) => client().searchMessageText(params))\nsendMessageFx.use(({\n    roomId,\n    content,\n    txnId\n}) => client().sendMessage(roomId, content, txnId))\neditMessageFx.use(({\n    roomId, eventId, body, txnId,\n}) => client().sendMessage(\n    roomId,\n    {\n        \"m.new_content\": {\n            msgtype: \"m.text\", body,\n        },\n        \"m.relates_to\": {\n            rel_type: \"m.replace\",\n            event_id: eventId,\n        },\n        \"msgtype\": \"m.text\",\n        \"body\": \"\",\n    },\n    txnId,\n))\ndeleteMessageFx.use(async ({\n    roomId, eventId, reason,\n}): Promise<DeleteMessageResult> => {\n    const options = reason ? { reason } : undefined\n    const res = await client().redactEvent(roomId, eventId, undefined, options)\n    return {\n        eventId: res.event_id,\n    }\n})\ngetRoomTimelineFx.use((roomId) => {\n    const room = client().getRoom(roomId)\n    if (room) {\n        return room.timeline\n            .filter((event) => [ROOM_MESSAGE_EVENT, ROOM_REDACTION_EVENT]\n                .includes(event.getType()))\n            .reduce(mergeMessageEvents, [])\n    }\n    return []\n})\nonClientEvent([\n    [\n        \"Room.timeline\",\n        (\n            event: MatrixEvent,\n            room: Room,\n            toStartOfTimeline: boolean,\n            removed,\n            data\n        ) => {\n            const eventType = event.getType()\n            if (eventType === ROOM_MESSAGE_EVENT\n                || eventType === ROOM_REDACTION_EVENT\n            ) {\n                if (!toStartOfTimeline && data.liveEvent) {\n                    roomMessage(toMessageEvent(event))\n                }\n            }\n        }],\n    [\"sync\", (state, prevState) => {\n        if (state === \"PREPARED\") {\n            const rooms = client().getRooms().map(toMappedRoom)\n            onCachedState(rooms)\n        }\n        if (state === \"SYNCING\" && prevState === \"PREPARED\") {\n            const rooms = client().getRooms().map(toMappedRoom)\n            onInitialSync(rooms)\n        }\n    }],\n])\nstopClientFx.use(() => client().stopClient())\nlet timelineWindow: matrix.TimelineWindow | undefined\ninitTimelineWindowFx\n    .use(async ({ roomId, initialEventId, initialWindowSize }) => {\n        const cl = client()\n        const room = client().getRoom(roomId)\n        if (!room) throw new RoomNotFound()\n        const timelineSet = room.getUnfilteredTimelineSet()\n        timelineWindow = new matrix.TimelineWindow(cl, timelineSet)\n        await timelineWindow.load(initialEventId, initialWindowSize)\n        return timelineWindow\n            .getEvents()\n            .filter((event) => [ROOM_MESSAGE_EVENT, ROOM_REDACTION_EVENT]\n                .includes(event.getType()))\n            .reduce(mergeMessageEvents, [])\n    })\nloadTimelineWindowFx.use(async ({ initialEventId, initialWindowSize }) => {\n    if (!timelineWindow) throw new TimelineWindowUndefined()\n    await timelineWindow.load(initialEventId, initialWindowSize)\n    return timelineWindow\n        .getEvents()\n        .filter((event) => [ROOM_MESSAGE_EVENT, ROOM_REDACTION_EVENT]\n            .includes(event.getType()))\n        .reduce(mergeMessageEvents, [])\n})\ngetTimelineWindowMessagesFx.use(() => {\n    if (!timelineWindow) return []\n    return timelineWindow\n        .getEvents()\n        .filter((event) => [ROOM_MESSAGE_EVENT, ROOM_REDACTION_EVENT]\n            .includes(event.getType()))\n        .reduce(mergeMessageEvents, [])\n})\n\npaginateTimelineWindowFx.use(async ({\n    direction,\n    size,\n    makeRequest,\n    requestLimit,\n}) => {\n    if (!timelineWindow) throw new TimelineWindowUndefined()\n    const dir = direction === \"forward\" ?\n        matrix.EventTimeline.FORWARDS :\n        matrix.EventTimeline.BACKWARDS\n    const result: boolean = await timelineWindow\n        .paginate(dir, size, makeRequest, requestLimit)\n    if (!result) throw new PaginationFail()\n    return timelineWindow.getEvents()\n        .filter((event) => [ROOM_MESSAGE_EVENT, ROOM_REDACTION_EVENT]\n            .includes(event.getType()))\n        .reduce(mergeMessageEvents, [])\n})\n"],"names":["matrixDomain","createDomain","loginByPasswordFx","effect","loginByTokenFx","initStoreFx","startClientFx","stopClientFx","searchFx","searchMessageTextFx","sendMessageFx","editMessageFx","deleteMessageFx","getRoomTimelineFx","initTimelineWindowFx","getTimelineWindowMessagesFx","loadTimelineWindowFx","paginateTimelineWindowFx","roomMessage","event","roomMessageBatch","batchEvents","onInitialSync","onCachedState","clientStore","options","callbacksStore","client","matrix","createClient","forEach","eventName","cb","on","prependClientParams","opts","onClientEvent","callbacks","push","toMessage","originalEventId","undefined","getId","content","getContent","sender","originServerTs","getDate","edited","Boolean","replacingEventId","redacted","isRedacted","toMappedRoom","room","roomId","name","summary","mergeMessageEvents","acc","isRelation","isRedaction","RoomNotFound","createCustomError","TimelineWindowUndefined","PaginationFail","ROOM_MESSAGE_EVENT","ROOM_REDACTION_EVENT","timelineWindow","forward","from","done","map","initialSyncLimit","to","use","params","login","async","store","startup","startClient","search","search_categories","room_events","results","result","MatrixEvent","searchMessageText","txnId","sendMessage","eventId","body","m.new_content","msgtype","m.relates_to","rel_type","event_id","reason","redactEvent","getRoom","timeline","filter","includes","getType","reduce","toStartOfTimeline","removed","data","eventType","liveEvent","payload","getRoomId","type","redaction","editing","hasAssocation","relatedEventId","getAssociatedId","toMessageEvent","state","prevState","rooms","getRooms","stopClient","initialEventId","initialWindowSize","cl","timelineSet","getUnfilteredTimelineSet","TimelineWindow","load","getEvents","direction","size","makeRequest","requestLimit","dir","EventTimeline","FORWARDS","BACKWARDS","paginate"],"mappings":"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"}