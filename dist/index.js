import e,{MatrixEvent as t}from"matrix-js-sdk";export{MatrixEvent,Room,RoomMember}from"matrix-js-sdk";import{createDomain as n,forward as o}from"effector";import{batchEvents as i}from"@42px/effector-extra";import{createCustomError as r}from"@42px/custom-errors";const s=n("matrix"),a=s.effect(),d=s.effect(),c=s.effect(),m=s.effect(),f=s.effect(),u=s.effect(),l=s.effect(),g=s.effect(),p=s.effect(),v=s.effect(),y=s.effect(),I=s.effect(),R=s.effect(),w=s.effect(),E=s.effect(),T=s.event(),x=i(T,500),h=s.event(),S=s.event();let A,C;const _=[],D=()=>(A||(A=e.createClient(C),_.forEach((([e,t])=>{A.on(e,t)}))),A),W=e=>{C=e},M=e=>{_.push(...e)};function P(e,t){return{originalEventId:void 0!==t?t:e.getId(),content:e.getContent(),sender:e.sender,originServerTs:e.getDate(),edited:Boolean(e.replacingEventId()),redacted:e.isRedacted()}}function b(e){return{roomId:e.roomId,name:e.name,summary:e.summary}}function k(e,t){return t.isRelation("m.replace")||t.isRedaction()||e.push(P(t)),e}const z=r("RoomNotFound"),B=r("TimelineWindowUndefined"),F=r("PaginationFail"),N="m.room.message",j="m.room.redaction";let q;o({from:a.done.map((()=>({initialSyncLimit:20}))),to:m}),a.use((e=>D().login("m.login.password",e))),d.use((e=>D().login("m.login.token",e))),c.use((async()=>{const{store:e}=D();if(e)return e.startup()})),m.use((e=>D().startClient(e))),u.use((async e=>(await D().search(e)).search_categories.room_events.results.map((({result:e})=>P(new t(e)))))),l.use((e=>D().searchMessageText(e))),g.use((({roomId:e,content:t,txnId:n})=>D().sendMessage(e,t,n))),p.use((({roomId:e,eventId:t,body:n,txnId:o})=>D().sendMessage(e,{"m.new_content":{msgtype:"m.text",body:n},"m.relates_to":{rel_type:"m.replace",event_id:t},msgtype:"m.text",body:""},o))),v.use((async({roomId:e,eventId:t,reason:n})=>{const o=n?{reason:n}:void 0;return{eventId:(await D().redactEvent(e,t,void 0,o)).event_id}})),y.use((e=>{const t=D().getRoom(e);return t?t.timeline.filter((e=>[N,j].includes(e.getType()))).reduce(k,[]):[]})),M([["Room.timeline",(e,t,n,o,i)=>{const r=e.getType();r!==N&&r!==j||!n&&i.liveEvent&&T(function(e){const t={eventId:e.getId(),content:e.getContent(),originServerTs:e.getDate(),roomId:e.getRoomId(),sender:e.sender,type:e.getType(),redaction:e.isRedaction(),redacted:e.isRedacted(),editing:Boolean(e.isRelation())};return e.hasAssocation()&&(t.relatedEventId=e.getAssociatedId()),t}(e))}],["sync",(e,t)=>{if("PREPARED"===e){const e=D().getRooms().map(b);S(e)}if("SYNCING"===e&&"PREPARED"===t){const e=D().getRooms().map(b);h(e)}}]]),f.use((()=>D().stopClient())),I.use((async({roomId:t,initialEventId:n,initialWindowSize:o})=>{const i=D(),r=D().getRoom(t);if(!r)throw new z;const s=r.getUnfilteredTimelineSet();return q=new e.TimelineWindow(i,s),await q.load(n,o),q.getEvents().filter((e=>[N,j].includes(e.getType()))).reduce(k,[])})),w.use((async({initialEventId:e,initialWindowSize:t})=>{if(!q)throw new B;return await q.load(e,t),q.getEvents().filter((e=>[N,j].includes(e.getType()))).reduce(k,[])})),R.use((()=>q?q.getEvents().filter((e=>[N,j].includes(e.getType()))).reduce(k,[]):[])),E.use((async({direction:t,size:n,makeRequest:o,requestLimit:i})=>{if(!q)throw new B;const r="forward"===t?e.EventTimeline.FORWARDS:e.EventTimeline.BACKWARDS;if(!await q.paginate(r,n,o,i))throw new F;return q.getEvents().filter((e=>[N,j].includes(e.getType()))).reduce(k,[])}));export{D as client,v as deleteMessageFx,p as editMessageFx,y as getRoomTimelineFx,R as getTimelineWindowMessagesFx,c as initStoreFx,I as initTimelineWindowFx,w as loadTimelineWindowFx,a as loginByPasswordFx,d as loginByTokenFx,S as onCachedState,M as onClientEvent,h as onInitialSync,E as paginateTimelineWindowFx,W as prependClientParams,T as roomMessage,x as roomMessageBatch,u as searchFx,l as searchMessageTextFx,g as sendMessageFx,m as startClientFx,f as stopClientFx};
//# sourceMappingURL=index.js.map
