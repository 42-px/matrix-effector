import e,{MatrixEvent as t}from"matrix-js-sdk";export{MatrixEvent,Room,RoomMember}from"matrix-js-sdk";import{createDomain as n,guard as o,sample as r,combine as s,forward as i}from"effector";import{batchEvents as d}from"@42px/effector-extra";import{throttle as a}from"patronum/throttle";import{createCustomError as c}from"@42px/custom-errors";const m=n("matrix"),l=m.effect(),u=m.effect(),f=m.effect(),g=m.effect(),v=m.effect(),I=m.effect(),w=m.effect(),p=m.effect(),R=m.effect(),y=m.effect(),h=m.effect(),E=m.effect(),A=m.effect(),T=m.effect(),b=m.effect(),C=m.effect(),M=m.event(),S=e=>d(M,e),k=m.event(),x=m.event(),D=m.event(),U=e=>a({source:D,timeout:e}),W=m.event(),z=m.event(),L=m.event(),N=m.event();let q,_;const P=[],B=()=>(q||(q=e.createClient(_),P.forEach((([e,t])=>{q.on(e,t)}))),q),j=e=>{_=e},F=e=>{P.push(...e)},G=({sender:e,width:t,height:n,resizeMethod:o,allowDefault:r=!0,allowDirectLinks:s=!1})=>e&&e.getAvatarUrl?e.getAvatarUrl(B().getHomeserverUrl(),t,n,o,r,s):null,O=({roomId:e,userId:t,width:n,height:o,resizeMethod:r,allowDefault:s=!0})=>{const i=B().getRoom(e);if(!i)return null;const d=i.getMember(t);return d?d.getAvatarUrl(B().getHomeserverUrl(),n,o,r,s,!0):null},Y=e=>{const t=B().getAccountData("m.direct"),n=t?Object.values(t.getContent()):[];let o=[];for(const e of n)o=[...o,...e];return!!o.includes(e)};function H(e,t){return{originalEventId:void 0!==t?t:e.getId(),content:e.getContent(),sender:e.sender,originServerTs:e.getDate(),edited:Boolean(e.replacingEventId()),redacted:e.isRedacted()}}function J(e){return{roomId:e.roomId,name:e.name,summary:e.summary}}function K(e,t){return t.isRelation("m.replace")||t.isRedaction()||e.push(H(t)),e}const Q="m.room.message",V="m.room.redaction",X=m.store(null),Z=m.store(null),$=m.store([]);y.pending,h.pending;const ee=c("RoomNotFound"),te=c("TimelineWindowUndefined"),ne=c("EventNotFound"),oe=c("ClientNotInitialized");X.on(W,((e,{roomId:t})=>t)),Z.on(C.doneData,((e,t)=>t)).reset(X.updates);const re=o({source:r(X,[y.done,h.done],((e,{params:{roomId:t},result:{messages:n}})=>({currentRoomId:e,roomId:t,messages:n}))),filter:({currentRoomId:e,roomId:t})=>e===t});$.on(re,((e,{messages:t})=>t)).reset(X.updates);const se=s(X,Z,((e,t)=>Boolean(e)&&Boolean(t)));function ie(){return B().getRooms().map(J)}o({source:r([X,Z],z,(([e,t],{initialEventId:n,initialWindowSize:o})=>({roomId:e,timelineWindow:t,initialEventId:n,initialWindowSize:o}))),filter:se,target:y}),o({source:r([X,Z],N,(([e,t],{size:n,makeRequest:o,requestLimit:r})=>({roomId:e,timelineWindow:t,direction:"backward",size:n,makeRequest:o,requestLimit:r}))),filter:se,target:h}),o({source:r([X,Z],L,(([e,t],{size:n,makeRequest:o,requestLimit:r})=>({roomId:e,timelineWindow:t,direction:"forward",size:n,makeRequest:o,requestLimit:r}))),filter:se,target:h}),b.use((()=>{const e=B();if(!e)return null;const t=e.getUserId();if(!t)return null;const n=e.getUser(t);return n?{userId:n.userId,currentlyActive:n.currentlyActive,displayName:n.displayName,lastActiveAgo:n.lastActiveAgo,lastPresenceTs:n.lastPresenceTs,presence:n.presence}:null})),i({from:l.done.map((()=>({initialSyncLimit:20}))),to:g}),l.use((e=>B().login("m.login.password",e))),u.use((e=>B().login("m.login.token",e))),f.use((async()=>{const{store:e}=B();if(e)return e.startup()})),g.use((e=>B().startClient(e))),I.use((async({term:e,roomId:n})=>{const o=B().getRoom(n);if(!o)throw new ee;const r={};return(await B().search({body:{search_categories:{room_events:{search_term:e,keys:["content.body"],filter:{rooms:[n]}}}}})).search_categories.room_events.results.map((({result:e})=>{const n=new t(e),s=n.getSender();return void 0===r[s]&&(r[s]=o.getMember(s)),n.sender=r[s],H(n)}))})),w.use((({roomId:e,content:t,txnId:n})=>B().sendMessage(e,t,n))),p.use((({roomId:e,eventId:t,body:n,txnId:o})=>B().sendMessage(e,{"m.new_content":{msgtype:"m.text",body:n},"m.relates_to":{rel_type:"m.replace",event_id:t},msgtype:"m.text",body:""},o))),R.use((async({roomId:e,eventId:t,reason:n})=>{const o=n?{reason:n}:void 0;return{eventId:(await B().redactEvent(e,t,void 0,o)).event_id}})),F([["Room.timeline",(e,t,n,o,r)=>{const s=e.getType();s!==Q&&s!==V||!n&&r.liveEvent&&M(function(e){const t={eventId:e.getId(),content:e.getContent(),originServerTs:e.getDate(),roomId:e.getRoomId(),sender:e.sender,type:e.getType(),redaction:e.isRedaction(),redacted:e.isRedacted(),editing:Boolean(e.isRelation())};return e.hasAssocation()&&(t.relatedEventId=e.getAssociatedId()),t}(e))}],["sync",(e,t)=>{if("PREPARED"!==e)if("SYNCING"!==e||"PREPARED"!==t)if("SYNCING"!==e||"SYNCING"!==t);else{const e=ie();D(e)}else{const e=ie();k(e)}else{const e=ie();x(e)}}]]),E.use((({roomId:e,eventId:t})=>{const n=B().getRoom(e);if(!n)throw new ee;const o=n.findEventById(t);if(!o)throw new ne;return B().setRoomReadMarkers(e,t,o)})),A.use((e=>{const t=B();if(!t)throw new oe;return e.map((e=>{var n;const o=t.getRoom(e.roomId);if(!o)throw new ee;const r=o.getLiveTimeline().getEvents();let s=0;for(let e=r.length-1;e>=0&&e!==r.length-99;e--){const n=r[e];if(o.hasUserReadEvent(t.getUserId(),n.getId()))break;s+=1}const i=r.filter((e=>[Q,V].includes(e.getType()))).reduce(K,[]),d=i.length?i[i.length-1]:void 0,a=Y(o.roomId),c=a?o.getMember(o.guessDMUserId()):null;return{...e,unreadCount:s,lastMessage:d,isDirect:a,directUserId:null==c?void 0:c.userId,isOnline:c?Boolean(null===(n=c.user)||void 0===n?void 0:n.currentlyActive):void 0,lastActivityTS:o.getLastActiveTimestamp()}}))})),v.use((()=>B().stopClient())),y.use((async({timelineWindow:e,initialEventId:t,initialWindowSize:n})=>{if(!e)throw new te;await e.load(t,n);const o=!e.canPaginate("f");return{messages:e.getEvents().filter((e=>[Q,V].includes(e.getType()))).reduce(K,[]),isLive:o,eventsRetrieved:!0}})),h.use((async({timelineWindow:t,direction:n,size:o,makeRequest:r,requestLimit:s})=>{if(!t)throw new te;const i="forward"===n?e.EventTimeline.FORWARDS:e.EventTimeline.BACKWARDS,d=await t.paginate(i,o,r,s),a=!t.canPaginate("f");return{messages:t.getEvents().filter((e=>[Q,V].includes(e.getType()))).reduce(K,[]),isLive:a,eventsRetrieved:d}})),T.use((e=>{const t=B().getRoom(e);if(!t)throw new ee;return function(e){return{roomMembersCount:e.getJoinedMemberCount()}}(t)})),C.use((async({roomId:t})=>{const n=B(),o=B().getRoom(t);if(!o)throw new ee;const r=o.getUnfilteredTimelineSet();return new e.TimelineWindow(n,r)}));export{Y as checkIsDirect,B as client,U as createOnSyncThrottled,S as createRoomMessageBatch,R as deleteMessageFx,p as editMessageFx,b as getLoggedUserFx,T as getRoomInfoFx,O as getRoomMemberAvatarUrl,A as getRoomsWithActivitiesFx,G as getSenderAvatarUrl,W as initRoom,C as initRoomFx,f as initStoreFx,z as loadRoom,l as loginByPasswordFx,u as loginByTokenFx,x as onCachedState,F as onClientEvent,k as onInitialSync,D as onSync,N as paginateBack,L as paginateFront,j as prependClientParams,E as readAllMessagesFx,M as roomMessage,I as searchRoomMessagesFx,w as sendMessageFx,g as startClientFx,v as stopClientFx};
//# sourceMappingURL=index.js.map
