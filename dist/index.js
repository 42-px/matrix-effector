import e,{MatrixEvent as t}from"matrix-js-sdk";export{MatrixEvent,Room,RoomMember}from"matrix-js-sdk";import{createDomain as n,forward as o}from"effector";import{batchEvents as r}from"@42px/effector-extra";import{throttle as s}from"patronum/throttle";import{createCustomError as i}from"@42px/custom-errors";const c=n("matrix"),d=c.effect(),a=c.effect(),l=c.effect(),m=c.effect(),u=c.effect(),g=c.effect(),f=c.effect(),v=c.effect(),I=c.effect(),p=c.effect(),w=c.effect(),h=c.effect(),y=c.effect(),R=c.effect(),E=c.effect(),T=c.effect(),A=c.effect(),C=c.effect(),M=c.event(),b=e=>r(M,e),x=c.event(),S=c.event(),U=c.event(),D=e=>s({source:U,timeout:e});let L,N;const _=[],k=()=>(L||(L=e.createClient(N),_.forEach((([e,t])=>{L.on(e,t)}))),L),P=e=>{N=e},z=e=>{_.push(...e)},W=({sender:e,width:t,height:n,resizeMethod:o,allowDefault:r=!0,allowDirectLinks:s=!1})=>e&&e.getAvatarUrl?e.getAvatarUrl(k().getHomeserverUrl(),t,n,o,r,s):null,B=({roomId:e,userId:t,width:n,height:o,resizeMethod:r,allowDefault:s=!0})=>{const i=k().getRoom(e);if(!i)return null;const c=i.getMember(t);return c?c.getAvatarUrl(k().getHomeserverUrl(),n,o,r,s,!0):null},F=e=>{const t=k().getAccountData("m.direct"),n=t?Object.values(t.getContent()):[];let o=[];for(const e of n)o=[...o,...e];return!!o.includes(e)};function j(e,t){return{originalEventId:void 0!==t?t:e.getId(),content:e.getContent(),sender:e.sender,originServerTs:e.getDate(),edited:Boolean(e.replacingEventId()),redacted:e.isRedacted()}}function G(e){return{roomId:e.roomId,name:e.name,summary:e.summary}}function O(e,t){return t.isRelation("m.replace")||t.isRedaction()||e.push(j(t)),e}const Y="m.room.message",q="m.room.redaction",H=i("RoomNotFound"),J=i("TimelineWindowUndefined"),K=i("PaginationFail"),Q=i("EventNotFound"),V=i("ClientNotInitialized");function X(){return k().getRooms().map(G)}let Z,$;C.use((()=>{const e=k();if(!e)return null;const t=e.getUserId();if(!t)return null;const n=e.getUser(t);return n?{userId:n.userId,currentlyActive:n.currentlyActive,displayName:n.displayName,lastActiveAgo:n.lastActiveAgo,lastPresenceTs:n.lastPresenceTs,presence:n.presence}:null})),o({from:d.done.map((()=>({initialSyncLimit:20}))),to:m}),d.use((e=>k().login("m.login.password",e))),a.use((e=>k().login("m.login.token",e))),l.use((async()=>{const{store:e}=k();if(e)return e.startup()})),m.use((e=>k().startClient(e))),g.use((async({term:e,roomId:n})=>{const o=k().getRoom(n);if(!o)throw new H;const r={};return(await k().search({body:{search_categories:{room_events:{search_term:e,keys:["content.body"],filter:{rooms:[n]}}}}})).search_categories.room_events.results.map((({result:e})=>{const n=new t(e),s=n.getSender();return void 0===r[s]&&(r[s]=o.getMember(s)),n.sender=r[s],j(n)}))})),f.use((({roomId:e,content:t,txnId:n})=>k().sendMessage(e,t,n))),v.use((({roomId:e,eventId:t,body:n,txnId:o})=>k().sendMessage(e,{"m.new_content":{msgtype:"m.text",body:n},"m.relates_to":{rel_type:"m.replace",event_id:t},msgtype:"m.text",body:""},o))),I.use((async({roomId:e,eventId:t,reason:n})=>{const o=n?{reason:n}:void 0;return{eventId:(await k().redactEvent(e,t,void 0,o)).event_id}})),p.use((e=>{const t=k().getRoom(e);return t?t.timeline.filter((e=>[Y,q].includes(e.getType()))).reduce(O,[]):[]})),z([["Room.timeline",(e,t,n,o,r)=>{const s=e.getType();s!==Y&&s!==q||!n&&r.liveEvent&&M(function(e){const t={eventId:e.getId(),content:e.getContent(),originServerTs:e.getDate(),roomId:e.getRoomId(),sender:e.sender,type:e.getType(),redaction:e.isRedaction(),redacted:e.isRedacted(),editing:Boolean(e.isRelation())};return e.hasAssocation()&&(t.relatedEventId=e.getAssociatedId()),t}(e))}],["sync",(e,t)=>{if("PREPARED"!==e)if("SYNCING"!==e||"PREPARED"!==t)if("SYNCING"!==e||"SYNCING"!==t);else{const e=X();U(e)}else{const e=X();x(e)}else{const e=X();S(e)}}]]),E.use((({roomId:e,eventId:t})=>{const n=k().getRoom(e);if(!n)throw new H;const o=n.findEventById(t);if(!o)throw new Q;return k().setRoomReadMarkers(e,t,o)})),T.use((e=>{const t=k();if(!t)throw new V;return e.map((e=>{var n;const o=t.getRoom(e.roomId);if(!o)throw new H;const r=o.getLiveTimeline().getEvents();let s=0;for(let e=r.length-1;e>=0&&e!==r.length-99;e--){const n=r[e];if(o.hasUserReadEvent(t.getUserId(),n.getId()))break;s+=1}const i=r.filter((e=>[Y,q].includes(e.getType()))).reduce(O,[]),c=i.length?i[i.length-1]:void 0,d=F(o.roomId),a=d?o.getMember(o.guessDMUserId()):null;return{...e,unreadCount:s,lastMessage:c,isDirect:d,directUserId:null==a?void 0:a.userId,isOnline:a?Boolean(null===(n=a.user)||void 0===n?void 0:n.currentlyActive):void 0,lastActivityTS:o.getLastActiveTimestamp()}}))})),u.use((()=>k().stopClient())),w.use((async({roomId:t,initialEventId:n,initialWindowSize:o})=>{const r=k(),s=k().getRoom(t);if(!s)throw new H;const i=s.getUnfilteredTimelineSet();Z=new e.TimelineWindow(r,i),await Z.load(n,o);const c=Z.getEvents(),d=i.getLiveTimeline().getEvents(),a=c[c.length-1]===d[d.length-1];$=s;return{messages:c.filter((e=>[Y,q].includes(e.getType()))).reduce(O,[]),isLive:a}})),y.use((async({initialEventId:e,initialWindowSize:t})=>{if(!Z||!$)throw new J;const n=$;await Z.load(e,t);const o=Z.getEvents(),r=n.getLiveTimeline().getEvents(),s=o[o.length-1]===r[r.length-1];return{messages:Z.getEvents().filter((e=>[Y,q].includes(e.getType()))).reduce(O,[]),isLive:s}})),h.use((()=>Z?Z.getEvents().filter((e=>[Y,q].includes(e.getType()))).reduce(O,[]):[])),R.use((async({direction:t,size:n,makeRequest:o,requestLimit:r})=>{if(!Z||!$)throw new J;const s=$,i="forward"===t?e.EventTimeline.FORWARDS:e.EventTimeline.BACKWARDS;if(!await Z.paginate(i,n,o,r))throw new K;const c=s.getLiveTimeline().getEvents(),d=Z.getEvents(),a=d[d.length-1]===c[c.length-1];return{messages:Z.getEvents().filter((e=>[Y,q].includes(e.getType()))).reduce(O,[]),isLive:a}})),A.use((e=>{const t=k().getRoom(e);if(!t)throw new H;return function(e){return{roomMembersCount:e.getJoinedMemberCount()}}(t)}));export{F as checkIsDirect,k as client,D as createOnSyncThrottled,b as createRoomMessageBatch,I as deleteMessageFx,v as editMessageFx,C as getLoggedUserFx,A as getRoomInfoFx,B as getRoomMemberAvatarUrl,p as getRoomTimelineFx,T as getRoomsWithActivitiesFx,W as getSenderAvatarUrl,h as getTimelineWindowMessagesFx,l as initStoreFx,w as initTimelineWindowFx,y as loadTimelineWindowFx,d as loginByPasswordFx,a as loginByTokenFx,S as onCachedState,z as onClientEvent,x as onInitialSync,U as onSync,R as paginateTimelineWindowFx,P as prependClientParams,E as readAllMessagesFx,M as roomMessage,g as searchRoomMessagesFx,f as sendMessageFx,m as startClientFx,u as stopClientFx};
//# sourceMappingURL=index.js.map
